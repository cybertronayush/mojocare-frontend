{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYUSHCYBERTRON\\\\Documents\\\\SquareBoat Hiring\\\\src\\\\Components\\\\Orders\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { api } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductsList = _ref => {\n  _s();\n\n  let {\n    id,\n    quantity\n  } = _ref;\n  const [productData, setProductData] = useState([]);\n  useEffect(() => {\n    api.getProductById(id).then(res => {\n      setProductData(res);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [productData.name, \" --- \", quantity]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductsList, \"+DUxuDq8JiH1ABnb0iuwGQPRH/Q=\");\n\n_c = ProductsList;\n\nconst Products = _ref2 => {\n  _s2();\n\n  let {\n    order\n  } = _ref2;\n  const prodData = JSON.parse(order.order);\n  const [productsIds, setProductsIds] = useState([]);\n  const [productsQua, setProductsQua] = useState([]);\n  useEffect(() => {\n    let prodIds = [];\n    let quanIds = [];\n\n    for (var key in prodData) {\n      if (prodData.hasOwnProperty(key)) {\n        prodIds = [...prodIds, key];\n        quanIds = [...quanIds, prodData[key]];\n      }\n    }\n\n    setProductsIds(prodIds);\n    setProductsQua(quanIds);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: productsIds && productsIds.map((prod, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProductsList, {\n        id: prod,\n        quantity: productsQua[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n\n_s2(Products, \"kHvYZFlhjCXEMCn4E0xqCRe4T9c=\");\n\n_c2 = Products;\n\nconst Orders = () => {\n  const orders = JSON.parse(localStorage.getItem(\"prevOrder\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-bold text-xl\",\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"w-full flex ml-16 justify-center flex-col\",\n      children: orders && orders.map(order => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mt-4 font-bold\",\n          children: [\"Order ID ------ \", order.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-sm ml-4\",\n          children: /*#__PURE__*/_jsxDEV(Products, {\n            order: order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Orders;\nexport default Orders;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProductsList\");\n$RefreshReg$(_c2, \"Products\");\n$RefreshReg$(_c3, \"Orders\");","map":{"version":3,"sources":["C:/Users/AYUSHCYBERTRON/Documents/SquareBoat Hiring/src/Components/Orders/index.js"],"names":["React","useEffect","useState","api","ProductsList","id","quantity","productData","setProductData","getProductById","then","res","name","Products","order","prodData","JSON","parse","productsIds","setProductsIds","productsQua","setProductsQua","prodIds","quanIds","key","hasOwnProperty","map","prod","index","Orders","orders","localStorage","getItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { api } from \"../../api\";\n\nconst ProductsList = ({ id, quantity }) => {\n    const [productData, setProductData] = useState([]);\n\n    useEffect(() => {\n        api.getProductById(id).then((res) => {\n            setProductData(res);\n        });\n    }, []);\n    return (\n        <div key={id}>\n            {productData.name} --- {quantity}\n        </div>\n    );\n};\n\nconst Products = ({ order }) => {\n    const prodData = JSON.parse(order.order);\n    const [productsIds, setProductsIds] = useState([]);\n    const [productsQua, setProductsQua] = useState([]);\n    useEffect(() => {\n        let prodIds = [];\n        let quanIds = [];\n        for (var key in prodData) {\n            if (prodData.hasOwnProperty(key)) {\n                prodIds = [...prodIds, key];\n                quanIds = [...quanIds, prodData[key]];\n            }\n        }\n        setProductsIds(prodIds);\n        setProductsQua(quanIds);\n    }, []);\n\n    return (\n        <>\n            {}\n            {productsIds &&\n                productsIds.map((prod, index) => (\n                    <div>\n                        <ProductsList id={prod} quantity={productsQua[index]} />\n                    </div>\n                ))}\n        </>\n    );\n};\n\nconst Orders = () => {\n    const orders = JSON.parse(localStorage.getItem(\"prevOrder\"));\n\n    return (\n        <div className=\"m-4\">\n            <div className=\"font-bold text-xl\">Orders</div>\n            <ul className=\"w-full flex ml-16 justify-center flex-col\">\n                {orders &&\n                    orders.map((order) => (\n                        <>\n                            <li className=\"mt-4 font-bold\">\n                                Order ID ------ {order.id}\n                            </li>\n                            <ul className=\"text-sm ml-4\">\n                                <Products order={order} />\n                            </ul>\n                        </>\n                    ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}