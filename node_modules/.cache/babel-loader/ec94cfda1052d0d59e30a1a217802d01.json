{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYUSHCYBERTRON\\\\Documents\\\\SquareBoat Hiring\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Nav from \"./Components/Nav\";\nimport ProductDetails from \"./Components/Product Details\";\nimport Auth from \"./Components/Auth\";\nimport { useState } from \"react\";\nimport { getCookie } from \"./api\";\nimport { NotificationBannerContext } from \"./Components/NotificationBanner/NotificationContext\";\nimport \"./App.css\";\nimport NotificationBanner from \"./Components/NotificationBanner\";\nimport Appoinment from \"./Components/Appoinment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(getCookie(\"token\") !== undefined);\n  const [notify, setNotify] = useState(null);\n\n  const setNotifyMessage = (message, type, time) => {\n    setNotify({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotify(null);\n    }, time);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NotificationBannerContext.Provider, {\n      value: {\n        notify,\n        setNotifyMessage: setNotifyMessage\n      },\n      children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Auth, {\n        setIsLoggedIn: setIsLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(NotificationBanner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            setIsLoggedIn: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/product-details/:id\",\n            component: ProductDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/form\",\n            component: Appoinment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"E+2ONYZ5hKvqVImlDff1sevctGc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/AYUSHCYBERTRON/Documents/SquareBoat Hiring/src/App.js"],"names":["BrowserRouter","Router","Route","Home","Nav","ProductDetails","Auth","useState","getCookie","NotificationBannerContext","NotificationBanner","Appoinment","App","isLoggedIn","setIsLoggedIn","undefined","notify","setNotify","setNotifyMessage","message","type","time","setTimeout"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,qDAA1C;AACA,OAAO,WAAP;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CACxCC,SAAS,CAAC,OAAD,CAAT,KAAuBO,SADiB,CAA5C;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMW,gBAAgB,GAAG,CAACC,OAAD,EAAUC,IAAV,EAAgBC,IAAhB,KAAyB;AAC9CJ,IAAAA,SAAS,CAAC;AAAEE,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,MAAM;AACbL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFS,EAEPI,IAFO,CAAV;AAGH,GALD;;AAOA,sBACI;AAAA,2BACI,QAAC,yBAAD,CAA2B,QAA3B;AACI,MAAA,KAAK,EAAE;AAAEL,QAAAA,MAAF;AAAUE,QAAAA,gBAAgB,EAAEA;AAA5B,OADX;AAAA,gBAGK,CAACL,UAAD,gBACG,QAAC,IAAD;AAAM,QAAA,aAAa,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG;AAAA,+BACI,QAAC,MAAD;AAAA,kCACI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAK,YAAA,aAAa,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAIK,QAAC,KAAD;AACG,YAAA,KAAK,MADR;AAEG,YAAA,IAAI,EAAC,sBAFR;AAGG,YAAA,SAAS,EAAEE;AAHd;AAAA;AAAA;AAAA;AAAA,kBAJL,eASK,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,OAAlB;AAA0B,YAAA,SAAS,EAAEM;AAArC;AAAA;AAAA;AAAA;AAAA,kBATL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AANR;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA0BH,CAxCD;;GAAMC,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Nav from \"./Components/Nav\";\nimport ProductDetails from \"./Components/Product Details\";\nimport Auth from \"./Components/Auth\";\nimport { useState } from \"react\";\nimport { getCookie } from \"./api\";\nimport { NotificationBannerContext } from \"./Components/NotificationBanner/NotificationContext\";\nimport \"./App.css\";\nimport NotificationBanner from \"./Components/NotificationBanner\";\nimport Appoinment from \"./Components/Appoinment\";\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(\n        getCookie(\"token\") !== undefined\n    );\n\n    const [notify, setNotify] = useState(null);\n\n    const setNotifyMessage = (message, type, time) => {\n        setNotify({ message, type });\n        setTimeout(() => {\n            setNotify(null);\n        }, time);\n    };\n\n    return (\n        <>\n            <NotificationBannerContext.Provider\n                value={{ notify, setNotifyMessage: setNotifyMessage }}\n            >\n                {!isLoggedIn ? (\n                    <Auth setIsLoggedIn={setIsLoggedIn} />\n                ) : (\n                    <>\n                        <Router>\n                            <NotificationBanner />\n                            <Nav setIsLoggedIn={setIsLoggedIn} />\n                            <Route exact path=\"/\" component={Home} />\n                             <Route\n                                exact\n                                path=\"/product-details/:id\"\n                                component={ProductDetails}\n                            />\n                             <Route exact path=\"/form\" component={Appoinment} />\n                             \n                        </Router>\n                    </>\n                )}\n            </NotificationBannerContext.Provider>\n        </>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}